<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.unknown100name.ecommercerecommend.dao.UserSimilarityMapper">

	<!-- 所有的用户行为表的字段 -->
	<sql id="userSimilarityProperty">
	   user_id, user_ref_id, similarity
	</sql>
	
	<!-- 更新用户相似度数据 -->
	<update id="updateUserSimilarity" parameterType="org.unknown100name.ecommercerecommend.pojo.entity.UserSimilarity">
	   UPDATE user_similarity
	   SET similarity = #{similarity}
	   WHERE (user_id = #{userId} AND user_ref_id = #{userRefId}) OR (user_id = #{userRefId} AND user_ref_id = #{userId})
	</update>
	
	<!-- 判断某两个用户之间的相似度是否已经存在 -->
	<select id="containUserSimilarity" parameterType="org.unknown100name.ecommercerecommend.pojo.entity.UserSimilarity" resultType="java.lang.Boolean">
	   SELECT COUNT(*) FROM user_similarity
	   WHERE user_id = #{userId} AND user_ref_id = #{userRefId}
	   OR user_ref_id = #{userId} AND user_id = #{userRefId}
	</select>

    <select id="getTopSimilarityUserByUserId" resultType="java.lang.Long">
		SELECT new_similarity.user_id
		FROM
			((SELECT us.user_ref_id AS 'user_id', us.similarity
			FROM user_similarity us WHERE us.user_id = #{userId} ORDER BY us.user_id)
			UNION
			(SELECT us.user_id AS 'user_id', us.similarity
			FROM user_similarity us WHERE us.user_ref_id = #{userId} ORDER BY us.user_id)) new_similarity
		ORDER BY new_similarity.similarity DESC
		LIMIT #{defaultRecommendUserNumber}
	</select>

</mapper>